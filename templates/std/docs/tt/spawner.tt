[% PROCESS header.tti title='Модуль spawner' %]

<h2>Описание</h2>
<p>
Модуль spawner (<a href="sp.exe">sp.exe</a>)
предназначен для запуска решений и контроля органичений по ресурсам и правам доступа.
</p>

<h2>Запуск</h2>
<pre>sp [опции] имя_приложения [параметры_приложения]</pre>
<table>
<tr><th>Опция</th><th>Переменная окружения</th><th>Описание</th></tr>
<tr><td>-ml:[n]</td><td>SP_MEMORY_LIMIT</td><td>Максимальный объем виртуальной памяти, выделенный процессу (в Mb).</td></tr>
<tr><td>-tl:[n]</td><td>SP_TIME_LIMIT</td><td>Максимальное время выполнения процесса в пользовательском режиме (в сек).</td></tr>
<tr><td>-d:[n]</td><td>SP_DEADLINE</td><td>Лимит физического времени, выделенного процессу (в сек).</td></tr>
<tr><td>-wl:[n]</td><td>SP_WRITE_LIMIT</td><td>Максимальный объем данных, который может быть записан процессом (в Mb).</td></tr>
<tr><td>-u:[user@domain]</td><td>SP_USER</td><td>Имя пользователя в формате: User[@Domain]</td></tr>
<tr><td>-p:[password]</td><td>SP_PASSWORD</td><td>Пароль.</td></tr>
<tr><td>-runas:[0|1]</td><td>SP_RUNAS</td><td>Использовать сервис RunAs для запуска процесса.</td></tr>
<tr><td>-s:[n]</td><td>SP_SECURITY_LEVEL</td><td>Уровень безопасности. Может принимать значения 0 или 1.</td></tr>
<tr><td>-hr:[0|1]</td><td>SP_HIDE_REPORT</td><td>Не показывать отчет.</td></tr>
<tr><td>-ho:[0|1]</td><td>SP_HIDE_OUTPUT</td><td>Не показывать выходной поток (STDOUT) приложения.</td></tr>
<tr><td>-sr:[file]</td><td>SP_REPORT_FILE</td><td>Сохранить отчет в файл.</td></tr>
<tr><td>-so:[file]</td><td>SP_OUTPUT_FILE</td><td>Сохранить выходной поток в файл.</td></tr>
<tr><td>-i:[file]</td><td>SP_INPUT_FILE</td><td>Получить входной поток из файла.</td></tr>
</table>
<p>
 Параметры командной строки перекрывают значения переменных окружения.</p>

<h2>Формат файла отчета</h2>
<pre>
[пустая строка]
--------------- Spawner report ---------------
Application:            [Application]
Parameters:             [Parameters]
SecurityLevel:          [SecurityLevel]
CreateProcessMethod:    [CreateProcessMethod]
UserName:               [UserName]
UserTimeLimit:          [UserTimeLimit]
Deadline:               [Deadline]
MemoryLimit:            [MemoryLimit]
WriteLimit:             [WriteLimit]
----------------------------------------------
UserTime:               [UserTime]
PeakMemoryUsed:         [PeakMemoryUsed]
Written:                [Written]
TerminateReason:        [TerminateReason]
ExitStatus:             [ExitStatus]
----------------------------------------------
SpawnerError:           [SpawnerError]
</pre>

<p><tt>Application</tt> - Имя приложения</p>
<p><tt>Parameters</tt> - Параметры приложения</p>
<p><tt>SecurityLevel</tt> - Уровень защиты. Может быть 0 (по-умолчанию) или 1.
    Уровень 1 включает защиту от:
    <ul>
    <li>Выхода из системы, завершения ее работы, перезагрузки или выключения компьютера</li>
    <li>Чтения, записи, стирания буфера обмена</li>
    <li>Изменения системных параметров через SystemParametersInfo</li>
    <li>Изменения параметров экрана через ChangeDisplaySettings</li>
    <li>Создания новых рабочих столов или переключения между ними</li>
    <li>Использования USER-объектов (например, HWND), созданных внешними процессами</li>
    <li>Доступа к общей таблицы атомов (global atom table)</li>
    </ul>
</p>
<p><tt>CreateProcessMethod</tt> - Метод создания процесса. Может быть:
    <ul>
    <li>"CreateProcess" - процесс запускается от текущего пользователя</li>
    <li>"CreateProcessAsUser" - процесс запускается от заданного пользователя.</li>
    <li>"RunAs service" - процесс запускается при помощи сервиса RunAs.</li>
    </ul>
    Запуск процесса от другого пользователя требует важных привилегий, а именно:
    <ul>
    <li>SeTcbPrivilege (Работа в режиме операционной системы)</li>
    <li>SeAssignPrimaryTokenPrivilege (Замена маркера уровня процесса)</li>
    <li>SeIncreaseQuotaPrivilege (Увеличение квот)</li>
    </ul>
    Запуск с помощью RunAs в некоторых конфигурациях может работать не корректно, 
    но он не требует специальных привилегий и может быть выполнен от обычного пользователя, 
    однако для этого должен быть включен сервис RunAs (SecondaryLogon).
</p> 
<p><tt>UserName</tt> - Имя пользователя под которым был запущен дочерний процесс в формате: User[@Domain]</p>
<p><tt>UserTimeLimit</tt> - максимальное время в сек. выполнения процесса в пользовательском режиме по истечении </p>
        которого процесс прерывается. По умолчанию: "Infinity".
<p><tt>Deadline</tt> - Время в сек., которое выделено процессу. По умолчанию: "Infinity".
        Отличается от TimeLimit тем, что это физическое время.
        Если процесс непрерывно осуществляет ввод/вывод, находиться в состоянии ожидания или система перегружена, 
        то процесс может выполнятся неограниченно долго несмотря на TimeLimit. 
        Для предотвращения данной ситуации нужно установить DeadLine.</p>
<p><tt>MemoryLimit</tt> - Максимальный объем выдаляемой памяти процессу в Mb. По умолчанию: "Infinity"</p>
<p><tt>WriteLimit</tt> - Максимальный объем информации, который может быть записан процессом в Mb. По умолчанию: "Infinity"</p>

<p><tt>UserTime</tt> - Фактическое время выполнения процесса в секундах с точностью до 0.01</p>
<p><tt>PeakMemoryUsed</tt> - Максимальное использование виртуальной памяти процессом в Mb.</p>
<p><tt>Written</tt> - Объем информации, который был записан процессом в Mb.</p>
<p><tt>TerminateReason</tt> - Причина завершения процесса. Может быть:         
        "ExitProcess" - процесс завершился нормально
        "MemoryLimitExceeded" - превышен лимит памяти
        "TimeLimitExceeded" - превышен лимит времени выполнения (либо TimeLimit, либо Deadline)
        "WriteLimitExceeded" - превышен лимит записи
        "AbormalExitProcess" - процесс завершился с исключением (список исключений см. ниже)

        Если процесс не был завершен, то данному полю соответствует значение "<none>"
</p>                
<p><tt>ExitStatus</tt> - Статус завершения процесса. Может принимать значение кода возврата процесса, либо одной из 
        следующих констант:
        "AccessViolation"
        "ArrayBoundsExceeded"
        "Breakpoint"
        "Control_C_Exit"
        "DatatypeMisalignment"
        "FloatDenormalOperand"
        "FloatInexactResult"
        "FloatInvalidOperation"
        "FloatMultipleFaults"
        "FloatMultipleTraps"
        "FloatOverflow"
        "FloatStackCheck"
        "FloatUnderflow"
        "GuardPageViolation"
        "IllegalInstruction"
        "InPageError"
        "InvalidDisposition"
        "IntegerDivideByZero"
        "IntegerOverflow"
        "NoncontinuableException"
        "PrivilegedInstruction"
        "RegNatConsumption"
        "SingleStep"
        "StackOverflow"
</p>
<p><tt>SpawnerError</tt> - Текст ошибки при работе spawner'а. 
        Если ошибка не произошла, то полю соотвествует значение "<none>"</p>
[% PROCESS footer.tti %]
