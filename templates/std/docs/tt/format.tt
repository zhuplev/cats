[% PROCESS header.tti title = 'Формат заданий' %]
[%- MACRO s(m1, m2) BLOCK; m1; ' '; m2; END -%]
[%- MACRO opt BLOCK %]<sup>&nbsp;<a href="#opt" title="Необязательный атрибут">o</a></sup>[% END -%]
[%- MACRO v11 BLOCK %]<sup><a href="#v11" title="С версии 1.1">1.1</a></sup>[% END -%]
[%- MACRO v12 BLOCK %]<sup><a href="#v12" title="С версии 1.2">1.2</a></sup>[% END -%]
[%- MACRO v13 BLOCK %]<sup><a href="#v13" title="С версии 1.3">1.3</a></sup>[% END -%]
[%- MACRO v14 BLOCK %]<sup><a href="#v14" title="С версии 1.4">1.4</a></sup>[% END -%]
[%- MACRO dv14 BLOCK %]<sup><a href="#dv14" title="Устарела с версии 1.4">&minus;1.4</a></sup>[% END -%]
[%- MACRO v15 BLOCK %]<sup><a href="#v15" title="С версии 1.5">1.5</a></sup>[% END -%]
[%- MACRO dv15 BLOCK %]<sup><a href="#dv15" title="Устарела с версии 1.5">&minus;1.5</a></sup>[% END -%]
[%- MACRO v16 BLOCK %]<sup><a href="#v16" title="С версии 1.6">1.6</a></sup>[% END -%]
[%- MACRO v17 BLOCK %]<sup><a href="#v17" title="С версии 1.7">1.7</a></sup>[% END -%]
[%- MACRO tag_in(t1, t2, m1, m2) BLOCK
%]<tt>&lt;<a name="[% t1 %]">[% t1 %]</a>&gt;[% IF t2 != '';
  IF m1 != '' %]</tt>[% m1 %]<br/><tt>[% ELSE %]<br/>[% END
%]&lt;<a href="#[% t2 %]">[% t2 %]</a>&gt;[% END %]</tt>[% m2;
END -%]
[%- MACRO tag_ref(t) BLOCK %]<tt>&lt;<a href="#[% t %]">[% t %]</a>&gt;</tt>[% END -%]
<h2>Версия 1.7</h2>

<p><a href="sample.zip">скачать пример пакета с заданием</a></p>
<p>Для хранения задачи используется ZIP-файл, в корне которого обязательно
должен быть ровно один XML-файл с описанием условия задачи и
некоторый набор дополнительных файлов с тестами, программами проверки и т.д.
</p>

<h2>Структура XML-файла с задачей</h2>

<table class="ft">
<col width="1%"/><col width="40%"><col width="*"/>
<tr>
  <th>Название тэга<br/>Тэг верхнего уровня</th> <th>Атрибуты</th> <th>Комментарии</th>
</tr>
<tr>
  <td>[% tag_in('CATS') %]</td>
  <td>version[% opt %] (по умолчанию "1.4")</td>
  <td>Обязательный внешний тэг</td>
</tr>
<tr>
  <td>[% tag_in('Problem', 'CATS') %]</td>
  <td>
    <ul>
      <li>title - заголовок задачи;</li>
      <li>lang[% opt %] - язык описания задачи;</li>
      <li>tlimit - лимит времени на прохождения одного теста (в секундах);</li>
      <li>mlimit[% v11 %] - лимит памяти на прохождение одного теста (в мегабайтах);</li>
      <li>author[% opt %] - автор;</li>
      <li>inputFile - имя входного файла;</li>
      <li>outputFile - имя выходного файла;</li>
      <li>difficulty[% opt %] [% dv14 %] - авторская оценка сложности задачи в баллах от (1 до 100);</li>
      <li>stdChecker[% opt %] [% dv14 %] - имя стандартной программы проверки;</li>
      <li>maxPoints[% opt %] [% v13 %] - максимальный балл за задачу, имеет приоритет перед суммой баллов по тестам</li>
    </ul>
  </td>
  <td>Стандартная программа проверки служит для сравнения выходного
    файла с файлом, содержащим ответ теста. Перечень стандартных программ проверки:
    <ul>
      <li>nums - проверяет совпадение целых чисел (4 байта - long int);</li>
      <li>floats2 - проверяет совпадение вещественных чисел (10 байт - long double);</li>
      <li>strs - проверяет совпадение строк до 256 символов;</li>
      <li>longnums - проверяет совпадение длинных целых чисел (до 10000 цифр);</li>
      <li>longstrs - проверяет совпадение длинных строк (до 10000 символов);</li>
    </ul>
    Начиная с версии 1.4, вместо атрибута stdChecker рекомендуется пользоваться
    тегом [% tag_ref('Import') %] с использованием следкющих стандартных guid:
    <ul>
      <li>std.nums - проверяет совпадение последовательностей 32-битных целых чисел;</li>
      <li>std.longnums - проверяет совпадение последовательностей беззнаковых целых чисел произвольной длины;</li>
      <li>std.floats<n>, где n от 2 до 5 -- проверяет совпадение вещественных чисел с точностью до n знаков;</li>
      <li>std.strs - проверяет совпадение наборов строк произвольной длины.</li>
    </ul>
  </td>
</tr>
<tr>
  <td>[% tag_in('Keyword', 'Problem') %]</td>
  <td>
      <ul><li>code - код ключевого слова</li></ul>
  </td>
  <td>Код ключевого слова должен быть известен системе</td>
</tr>
<tr>
  <td>[% tag_in('ProblemStatement', 'Problem') %]</td>
  <td>&nbsp;</td>
  <td>Описание условия задачи в формате STML.</td>
</tr>
<tr>
  <td>[% tag_in('ProblemConstraints', 'Problem') %]</td>
  <td>&nbsp;</td>
  <td>Описание ограничений на входные данные задачи в формате STML</td>
</tr>
<tr>
  <td>[% tag_in('InputFormat', 'Problem') %]</td>
  <td>&nbsp;</td>
  <td>Описание формата входного файла в формате STML</td>
</tr>
<tr>
  <td>[% tag_in('OutputFormat', 'Problem') %]</td>
  <td>&nbsp;</td>
  <td>Описание формата выходного файла в формате STML.</td>
</tr>
<tr>
  <td>[% tag_in('Explanation', 'Problem', v15) %]</td>
  <td>&nbsp;</td>
  <td>Разбор задачи в формате STML.</td>
</tr>
<tr>
  <td>[% tag_in('Checker', 'Problem') %]</td>
  <td>
    <ul>
      <li>name - идентификатор объекта [% tag_ref('Checker') %] (произвольная текстовая строка);</li>
      <li>src[% opt %] - путь к файлу с исходным кодом;</li>
      <li>de_code[% opt %] - код среды разработки;</li>
      <li>style[% opt %] [% v12 %] -- формат параматров,
        может принимать значения:
        <ul>
          <li>"legacy" -- параметры <tt>input answer output</tt>, значение по умолчанию для совместимости
            со старыми задачами</li>
          <li>"testlib" -- параметры <tt>input output answer</tt>, для совместимости с библиотекой testlib.
          Рекомендуется использовать в новых задачах.</li>
        </ul>
      </li>
      <li>export[% opt %] [% v14 %] - глобальный идентификатор.</li>
      <li>timeLimit[% opt %] [% v17 %] -- лимит времени в секундах.</li>
      <li>memoryLimit[% opt %] [% v17 %] -- лимит памяти в мегабайтах.</li>
    </ul>
  </td>
  <td>
    Описание проверяющей программы. Данный тэг игнорируется, если в описании задачи присутствует атрибут stdChecker.
    "src" - задает путь к файлу, относительно корня архива. Допускается использование вложенных каталогов.
    Регистр пути к файлу должен совпадать с регистром имен файлов в архиве.
    Перечень стандартных кодов сред разработки:
    <ul>
      <li>1[% v12 %] - None (h;inc)</li>
      <li>2[% v16 %] - Answers in zip (zip)</li>
      <li>101 - Cross-platform C/C++ compiler (cpp;c)</li>
      <li>102 - GNU C++ (cc;cxx)</li>
      <li>103 - MS Visual C++ (cpp;c)</li>
      <li>104 - Borland C++ 3.1 (cpp;c)</li>
      <li>105 - GNU C (c)</li>
      <li>201 - Borland Pascal 7.0 (pas)</li>
      <li>202 - Free Pascal (pp)</li>
      <li>203 - Borland Delphi (dpr)</li>
      <li>301 - Quick Basic (qb)  (поддерживается не полностью)[% v11 %]</li>
      <li>302 - Free Basic (bas) [% v14 %]</li>
      <li>401 - Java (java)[% v13 %]</li>
      <li>402 - C# (cs)[% v16 %]</li>
      <li>501 - Perl (pl)[% v14 %]</li>
      <li>502 - Python (py)[% v16 %]</li>
      <li>503 - Haskell (hs)[% v16 %]</li>
      <li>504 - Ruby (rb)[% v16 %]</li>
    </ul>

    Если код среды разработки не указан, то он определяется по расширению файла,
    в порядке приоритета, заданного списком стандартных кодов сред разработки.
    <p>
      Код возврата прооверяющей программы: 0 -- OK, 1 -- WA, 2 -- PE, 3 -- Internal error.
    </p>
  </td>
</tr>
<tr>
  <td>[% tag_in('Picture', 'Problem') %]</td>
  <td>
    <ul>
      <li>name -- идентификатор объекта [% tag_ref('Picture') %] (произвольная текстовая строка);</li>
      <li>src[% opt %] -- путь к файлу с изображением.</li>
    </ul>
  </td>
  <td>Описание картинки, встраиваемой в текст задачи.</td>
</tr>
<tr>
  <td>[% tag_in('Attachment', 'Problem', v16) %]</td>
  <td>
    <ul>
      <li>name -- идентификатор объекта [% tag_ref('Attachment') %] (произвольная текстовая строка);</li>
      <li>src -- путь к файлу вложением.</li>
    </ul>
  </td>
  <td>Произвольный файл, доступный для скачивания из текста задачи.</td>
</tr>
<tr>
  <td>[% tag_in('Solution', 'Problem') %]</td>
  <td>
    <ul>
      <li>name -- идентификатор объекта [% tag_ref('Solution') %];</li>
      <li>src[% opt %] -- путь к файлу с исходным кодом;</li>
      <li>de_code[% opt %] -- код среды разработки.</li>
      <li>export[% opt %] [% v14 %] -- глобальный идентификатор.</li>
      <li>timeLimit[% opt %] [% v17 %] -- лимит времени в секундах. По умолчанию совпадает с лимитом задачи.</li>
      <li>memoryLimit[% opt %] [% v17 %] -- лимит памяти в мегабайтах. По умолчанию совпадает с лимитом задачи.</li>
    </ul>
  </td>
  <td>Описание эталонного решения.</td>
</tr>
<tr>
  <td>[% tag_in('Generator', 'Problem') %]</td>
  <td>
    <ul>
      <li>name -- идентификатор объекта [% tag_ref('Generator') %];</li>
      <li>src[% opt %] -- путь к файлу с исходным кодом;</li>
      <li>de_code[% opt %] -- код среды разработки;</li>
      <li>outputFile[% opt %] [% v12 %] -- имя выходного файла или "*STDOUT";</li>
      <li>export[% opt %] [% v14 %] -- глобальный идентификатор.</li>
      <li>timeLimit[% opt %] [% v17 %] -- лимит времени в секундах.</li>
      <li>memoryLimit[% opt %] [% v17 %] -- лимит памяти в мегабайтах.</li>
    </ul>
  </td>
  <td>Описание генератора тестов. Генератор должен создать файл,
    имя которого заданно в атрибуте <tt>outputFile</tt>. Этот файл используется в качестве
    исходных данных в теге [% tag_ref('In') %].
    По умолчанию имя файла должно совпадать со значением атрибута <tt>inputFile</tt> тега [% tag_ref('Problem') %].
    Специальное значение <tt>outputFile="*STDOUT"</tt> означает, что генератор выдаёт тест на стандартный вывод.
    <br/>
    Начиная с версии 1.5, для групповых генераторов атрибут outputFile может содержать
    контекстные переменные, обозначающие номер теста.
    Например, для генератора, создающего файлы t01, t02, ..., t50:
    <pre>
      &lt;Generatore name="gen" src="gen.pas" outputFile="t%0n" /&gt
      &lt;Test rank="1-50" &gt; &lt;In use="gen" genAll="1"&gt; ...</pre>
  </td>
</tr>
<tr>
  <td>[% tag_in('GeneratorRange', 'Problem', v12) %]</td>
  <td>
    <ul>
      <li>from -- порядковый номер первого генератора;</li>
      <li>to -- порядковый номер последнего генератора;</li>
      <li>name -- идентификатор объекта [% tag_ref('Generator') %];</li>
      <li>src[% opt %] -- путь к файлу с исходным кодом;</li>
      <li>de_code[% opt %] -- код среды разработки.</li>
      <li>outputFile[% opt %] [% v12 %] -- имя выходного файла или "*STDOUT".</li>
      <li>export[% opt %] [% v14 %] -- глобальный идентификатор.</li>
      <li>timeLimit[% opt %] [% v17 %] -- лимит времени в секундах.</li>
      <li>memoryLimit[% opt %] [% v17 %] -- лимит памяти в мегабайтах.</li>
    </ul>
  </td>
  <td>В атрибутах name, src и export тега [% tag_ref('GeneratorRange') %] допускается
    использование контекстных переменных, обозначающих номер текущего генератора.
    Например:<br/>
    <tt>&lt;GeneratorRange from="1" to="10" name="g%0n" src="gen%0n.pas"/&gt</tt>
  </td>
</tr>
<tr>
  <td>[% tag_in('Test', 'Problem') %]</td>
  <td><ul>
    <li>rank -- спецификация порядковых номеров теста.
      Может содержать последовательность диапазонов номеров, разделёных запятыми, например "3,5-7,1" [% v15 %].
      Если поле rank равно "*", указанные в теге параметры принимаются в качестве значений по умолчанию
      для всех тестов. [% v16 %]</li>
    <li>points[% opt %] -- количество баллов за тест.</li>
  </ul></td>
  <td>Содержит описание тестов.
  В задаче должны присутствовать тесты со значениями rank от 1 до некоторого N.
  Если ни одного теста нет, то любое компилируемое решение будет принято как верное.
  Начиная с версии 1.5 в атрибутах тегов [% tag_ref('In') %] и [% tag_ref('Out') %],
  вложенных в [% tag_ref('Test') %],
  можно использовать контекстные переменные, обозначающие номер теста.
  Например:<pre>&lt;Test rank="1-10"&gt;
  &lt;In src="%0n.in"/&gt;&lt;Out use="solution"/&gt;
&lt;/Test&gt</pre>
  Для более экономного описания можно распределять описание теста на несколько тегов, например:
  <pre>&lt;Test rank="1-5" points="1" /&gt;
&lt;Test rank="6-10" points="2" /&gt;
&lt;Test rank="1-10"&gt;&lt;Out use="sol"&gt;&lt;/Test&gt;</pre>
  При этом данные об одном тесте, указанные в различных тегах, не должны перекрываться.
</td>
</tr>
<tr>
  <td>[% tag_in('TestRange', 'Problem', s(v11, dv15)) %]</td>
  <td>
    <ul>
      <li>from -- порядковый номер первого теста;</li>
      <li>to -- порядковый номер последнего теста;</li>
       <li>points[% opt %] -- количество баллов за каждый тест диапазона.</li>
    </ul>
  </td>
  <td>
  Начиная с версии 1.5, рекомендуется использовать тег [% tag_ref('Test') %].<br/>
  В атрибутах тегов [% tag_ref('In') %] и [% tag_ref('Out') %], вложенных в [% tag_ref('TestRange') %],
  можно использовать контекстные переменные, обозначающие номер теста.
  Например:<pre>&lt;TestRange from="1" to="10"&gt;
  &lt;In src="%0n.in"/&gt;&lt;Out use="solution"/&gt;
&lt;/TestRange&gt</pre>
</td>
</tr>
<tr>
  <td>[% tag_in('In', 'Test') %], [% tag_ref('TestRange'); v11 %]</td>
  <td>
    <ul>
      <li>use[% opt %] -- идентификатор объекта [% tag_ref('Generator') %];</li>
      <li>param[% opt %] -- параметры, передаваемые генератору тестов при запуске;</li>
      <li>src[% opt %] -- путь к входному файлу теста (если не указан атрибут use).</li>
      <li>genAll[% s(opt, v15) %] -- использовать групповую генерацию.</li>
    </ul>
  </td>
  <td>Описание входного файла теста.
    Если указан атрибут "use", то входной файл теста будет получен путём запуска
    генератора тестов.
  </td>
</tr>
<tr>
  <td>[% tag_in('Out', 'Test') %], [% tag_ref('TestRange'); v11 %]</td>
  <td>
    <ul>
      <li>use[% opt %] -- идентификатор объекта [% tag_ref('Solution') %];</li>
      <li>src[% opt %] -- путь к выходному файлу теста (если не указан атрибут use).</li>
    </ul>
  </td>
  <td>Если указан атрибут "use", то выходной файл теста будет получен путём запуска
    эталонного решения.
  </td>
</tr>
<tr>
  <td>[% tag_in('Testset', 'Problem', v15) %]</td>
  <td><ul>
    <li>name - имя тестового набора</li>
    <li>tests - спецификация порядковых номеров теста.
      Может содержать последовательность диапазонов номеров, разделёных запятыми, например "3,5-7,1"</li>
  </ul></td>
  <td>Содержит описание тестового набора. При подключении задачи к турниру можно
    указать тестовые наборы, которые будут использоваться для проверки.
    По умолчанию используются все имеющиеся в пакете тесты.</td>
</tr>
<tr>
  <td>[% tag_in('Module', 'Problem', v12) %]</td>
  <td>
    <ul>
      <li>name -- идентификатор объекта [% tag_ref('Module') %];</li>
      <li>src -- путь к файлу с исходным кодом;</li>
      <li>de_code[% opt %] -- код среды разработки.</li>
      <li>type -- вид модуля (generator, checker, solution).</li>
      <li>export[% opt %] [% v14 %] -- глобальный идентификатор.</li>
    </ul>
  </td>
  <td>Описание модуля. Файлы модулей распаковываются и компилируются вместе с каждым объектом
    соответствующего вида. Для модулей, отдельная компиляция которых не требуется, следует указывать
    среду разработку "None" (de_code="1").
    Порядок компиляции модулей совпадает с порядком перечисления в файле описания задачи.
  </td>
</tr>
<tr>
  <td>[% tag_in('Import', 'Problem', v14) %]</td>
  <td>
    <ul>
      <li>guid -- глобальный идентификатор импортируемого объекта.
        Может содержать символ <tt>*</tt>, обозначающий произвольную подстроку.[% v15 %]</li>
      <li>type[% opt %] -- тип импортируемого объекта модуля (generator, checker, solution).</li>
      <li>name[% opt %] [% v15 %] -- идентификатор объекта для ссылок в текущей задаче</li>
    </ul>
  </td>
  <td>Импорт объекта из существующей задачи. Поиск объекта осуществляется по guid.
    Если указан атрибут type, проверяется соответствие типа объекта.
    Эффект от импорта объекта эквивалентен добавлению его копии в пакет с задачей.
  </td>
</tr>
<tr>
  <td>[% tag_in('Sample', 'Problem') %]</td>
  <td>
    <ul>
      <li>rank -- порядковый номер теста с примером (не пересекается с аналогичным атрибутом тега [% tag_ref('Test') %]).</li>
    </ul>
  </td>
  <td>Описание демонстрационного теста</td>
</tr>
<tr>
  <td>[% tag_in('SampleIn', 'Sample') %]</td>
  <td>
    <ul>
      <li>src[% opt %] [% v16 %] -- путь ко входному файлу примера.</li>
    </ul>
  </td>
  <td>
    Содержит текст с примером входного файла в случае, если не указан атрибут src.
    Отступы и переносы задаются так же, как и в текстовом файле.
  </td>
</tr>
<tr>
  <td>[% tag_in('SampleOut', 'Sample') %]</td>
  <td>
    <ul>
      <li>src[% opt %] [% v16 %] -- путь к выходному файлу примера.</li>
    </ul>
  </td>
  <td>Содержит текст с примером выходного файла в случае, если не указан атрибут src.</td>
</tr>
</table>

<a name="opt"></a><p><a href="" onclick="javascript:history.back(-1)"><sup>o</sup></a>
  Атрибуты, помеченные этим знаком, являются необязательными.</p>
[%- MACRO since(n, v) BLOCK -%] 
<a name="[% n %]"></a><p><a href="" onclick="javascript:history.back(-1)"><sup>[% v %]</sup></a>
  Данная возможность присутствует начиная с версии [% v %].</p>
[%- END -%]
[%
  since('v11', '1.1'); since('v12', '1.2');
  since('v13', '1.3'); since('v14', '1.4');
  since('v15', '1.5'); since('v16', '1.6'); since('v17', '1.7');
%]
<a name="dv14"></a><p><a href="" onclick="javascript:history.back(-1)"><sup>&minus;1.4</sup></a>
  Данная возможность считается устаревшей начиная с версии 1.4.</p>
<a name="dv15"></a><p><a href="" onclick="javascript:history.back(-1)"><sup>&minus;1.5</sup></a>
  Данная возможность считается устаревшей начиная с версии 1.5.</p>

<a name="contextVars" />
<h2>Контекстные переменные</h2>

<p>Имеют вид <tt>%n</tt>, <tt>%0n</tt>, что обозначает соответственно подстановку номера и номера с лидирующим нулём.</p>

<h2>Описание формата STML (Simple Text Markup Language)</h2>

<p>Формат STML -- упрощенное подмножество HTML. В STML определены следующие тэги:</p>

<table class="ft">
<tr><th>Название тэга</br>Тэг верхнего уровня</th><th>Атрибуты</th><th>Комментарии</th></tr>
<tr><td>[% tag_in('img') %]</td>
  <td>
    <ul>
      <li>picture -- идентификатор объекта [% tag_ref('Picture') %];</li>
      <li>width[% opt %] -- ширина изображения (в пикселях);</li>
      <li>height[% opt %] -- высота изображения (в пикселях);</li>
      <li>align[% opt %] -- метод выравнивание изображения<br/>
        (Может принимать значения: left - выравнивание по левому краю, right - по правому краю).</li>
    </ul>
  </td>
  <td>Вставка картинки.</td>
</tr>
<tr><td>[% tag_in('a'); v16 %]</td>
  <td>
    <ul>
      <li>attachment -- идентификатор объекта [% tag_ref('Attachment') %];</li>
    </ul>
  </td>
  <td>Вставка ссылки на вложенный файл.</td>
</tr>
<tr><td>[% tag_in('i') %]</td>
  <td>&nbsp;</td>
  <td>Выделение курсивом.</td>
</tr>
<tr><td>[% tag_in('b') %]</td>
  <td>&nbsp;</td>
  <td>Выделение жирным шрифтом.</td>
</tr>
<tr><td>[% tag_in('sup') %]</td>
  <td>&nbsp;</td>
  <td>Перевод в надстрочный индекс.</td>
</tr>
<tr><td>[% tag_in('sub') %]</td>
  <td>&nbsp;</td>
  <td>Перевод в подстрочный индекс.</td>
</tr>
<tr><td>&lt;table&gt;</td>
  <td>
    <ul>
      <li>border[% opt %] - 1 - граница присутствует,<br/>
        0 - в противном случае (по умолчанию граница присутствует);</li>
      <li>width[% opt %] - ширина таблицы.</li>
    </ul>
  </td>
  <td>Таблица.</td>
</tr>
<tr><td>[% tag_in('tr', 'table') %]</td>
  <td>&nbsp;</td>
  <td>Ряд таблицы</td>
</tr>
<tr><td>[% tag_in('td', 'tr') %]</td>
  <td>&nbsp;</td>
  <td>Ячейка таблицы</td>
</tr>
</table>
[% PROCESS footer.tti %]